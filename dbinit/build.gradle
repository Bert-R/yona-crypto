description = 'Database initializer'

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$project.ext.springBootVersion")
		classpath("io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath 'net.researchgate:gradle-release:2.3.4'
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'net.researchgate.release'
apply from: 'liquibase.gradle'

jar {
	baseName = 'DatabaseInitializer'
}

release {
	failOnCommitNeeded = true
	tagTemplate = 'adminservice-${version}'
	git {
		requireBranch = 'yd-40-changes-for-building|master'
	}
}

dependencies {
	compile project(":core")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.batch:spring-batch-core:3.0.7.RELEASE")
    compile (group: 'org.liquibase', name: 'liquibase-core', version: "3.5.3")

	runtime("org.hsqldb:hsqldb")
}

group = 'yonadev'

task buildDocker(type: Docker, dependsOn: bootRepackage) {
	tag = "${project.group}/yonahsqldb"
	push = true
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from bootRepackage
			into stageDir
			rename "${jar.baseName}-${jar.version}-${bootRepackage.classifier}", "${jar.baseName}"
		}
		copy {
			from 'data'
			into "$stageDir/data"
		}
	}
}

bootRun {
	enableAssertions=true

	systemProperties = [
		'spring.datasource.url': "jdbc:hsqldb:file:../YonaDB",
		'spring.batch.initializer.enabled': "true",
		'spring.jpa.hibernate.ddl-auto': "update"
	]
}

bootRepackage {
        classifier = "full"
}
