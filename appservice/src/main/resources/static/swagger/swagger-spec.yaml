swagger: '2.0'
info:
  title: Yona app service API
  description: The API of the service backing the Yona app
  version: 1.0.0
schemes:
  - http
basePath: /
produces:
  - application/json
paths:
  /users/:
    post:
      summary: Add a new user
      description: Registers a new user
      parameters:
        - name: Yona-Password
          in: header
          description: The device password
          required: true
          type: string
        - name: overwriteUserConfirmationCode
          in: query
          description: Pass the confirmation code here when trying to overwrite the account in case of a device loss
          required: false
          type: string
        - in: body
          name: body
          description: New user
          required: true
          schema:
            $ref: '#/definitions/PostPutUser'
      tags:
        - User
      responses:
        '201':
          description: The created user
          schema:
            $ref: '#/definitions/UserWithPrivateData'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ConfirmationError'
  '/users/{id}':
    parameters:
      - name: id
        in: path
        description: The ID of the user
        required: true
        type: string
    get:
      summary: Get a user
      description: Fetches the user identified by the given ID
      parameters:
        - name: Yona-Password
          in: header
          description: The device password
          required: false
          type: string
        - name: includePrivateData
          in: query
          description: Pass true to fetch the private data of the user
          required: false
          type: boolean
      tags:
        - User
      responses:
        '200':
          description: The requested user. The set of returned properties depends on the query parameter includePrivateData.
          schema:
            $ref: '#/definitions/UserWithPrivateData'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a user
      description: Fetches the user identified by the given ID
      parameters:
        - name: Yona-Password
          in: header
          description: The device password
          required: true
          type: string
        - in: body
          name: body
          description: New user
          required: true
          schema:
            $ref: '#/definitions/PostPutUser'
      tags:
        - User
      responses:
        '200':
          description: The requested user
          schema:
            $ref: '#/definitions/PostPutUser'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a user
      description: Deletes the user with the given ID
      parameters:
        - name: Yona-Password
          in: header
          description: The device password
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: The user is deleted.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/users/{id}/confirmMobileNumber':
    parameters:
      - name: id
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    post:
      summary: Confirm mobile number
      description: Post the code to confirm the mobile number of the user. This number is sent to the user by SMS.
      parameters:
        - in: body
          name: body
          description: Message with confirmation code
          required: true
          schema:
            type: object
            required:
              - code
            properties:
              code:
                type: string
      tags:
        - User
      responses:
        '201':
          description: The updated user
          schema:
            $ref: '#/definitions/UserWithPrivateData'
        default:
          description: Confirmation failed
          schema:
            $ref: '#/definitions/ConfirmationError'
  '/users/{id}/resendMobileNumberConfirmationCode':
    parameters:
      - name: id
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    post:
      summary: Request resend of a mobile number confirmation code
      description: Post an empty request to get a new mobile number confirmation code texted to the user
      tags:
        - User
      responses:
        '200':
          description: The request is successfully handled
        default:
          description: Confirmation failed
          schema:
            $ref: '#/definitions/ConfirmationError'
  '/users/{userID}/goals/':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    post:
      summary: Add a new goal
      description: Add a new goal to an existing user
      parameters:
        - in: body
          name: body
          description: New goal
          required: true
          schema:
            $ref: '#/definitions/PostPutGoal'
      tags:
        - Goal
      responses:
        '201':
          description: The created goal
          schema:
            $ref: '#/definitions/Goal'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get all goals
      description: Fetches all goals of the user with the given ID
      tags:
        - Goal
      responses:
        '200':
          description: All goals of this user.
          schema:
            type: array
            items: 
              $ref: '#/definitions/Goal'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/users/{userID}/goals/{id}':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: id
        in: path
        description: The ID of the goal
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    get:
      summary: Get a goal
      description: Fetches the goal identified by the given ID
      tags:
        - Goal
      responses:
        '200':
          description: The requested goal.
          schema:
            $ref: '#/definitions/Goal'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete goal
      description: Deletes this goal
      parameters:
        - name: Yona-Password
          in: header
          description: The device password
          required: true
          type: string
      tags:
        - Goal
      responses:
        '200':
          description: The goal is deleted.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/users/{userID}/buddies/':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    post:
      summary: Add a new buddy
      description: Add a new buddy to an existing user
      parameters:
        - in: body
          name: body
          description: New buddy
          required: true
          schema:
            $ref: '#/definitions/PostPutBuddy'
      tags:
        - Buddy
      responses:
        '201':
          description: The created buddy
          schema:
            $ref: '#/definitions/Buddy'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get all buddies
      description: Fetches all buddies of the user with the given ID
      tags:
        - Buddy
      responses:
        '200':
          description: All buddies of this user.
          schema:
            type: array
            items: 
              $ref: '#/definitions/Buddy'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/users/{userID}/buddies/{id}':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: id
        in: path
        description: The ID of the buddy
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    get:
      summary: Get a buddy
      description: Fetches the buddy identified by the given ID
      tags:
        - Buddy
      responses:
        '200':
          description: The requested buddy.
          schema:
            $ref: '#/definitions/Buddy'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete buddy
      description: Deletes this buddy
      parameters:
        - name: Yona-Password
          in: header
          description: The device password
          required: true
          type: string
      tags:
        - Buddy
      responses:
        '200':
          description: The new buddy is deleted.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/users/{userID}/activity/days/':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    get:
      summary: Get day activity overview
      description: Get network and app activity of the current day, pageable to yesterday and before 
      parameters:
        - name: size
          in: query
          description: The number of elements to be fetched
          required: false
          default: 3
          type: number
        - name: page
          in: query
          description: The page to be fetched
          required: false
          default: 0
          type: number
      tags:
        - Activity
      responses:
        '200':
          description: Activity of this user.
          schema:
            $ref: '#/definitions/PagedDayActivityOverviews'
  '/users/{userID}/activity/days/{date}/details/{goalID}':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: date
        in: path
        description: The date of the day in ISO 8601 format (yyyy-MM-dd)
        required: true
        type: string
      - name: goalID
        in: path
        description: The ID of the goal for which the activity was recorded
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    get:
      summary: Get day activity detail
      description: Get day network and app activity for a specific goal on a specific day
      tags:
        - Activity
      responses:
        '200':
          description: Activity of this user for the specific goal on the specific day.
          schema:
            $ref: '#/definitions/DayActivity'
  '/users/{userID}/activity/weeks/':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    get:
      summary: Get week activity overview
      description: Get network and app activity of the current week, pageable to the weeks before 
      parameters:
        - name: size
          in: query
          description: The number of elements to be fetched
          required: false
          default: 2
          type: number
        - name: page
          in: query
          description: The page to be fetched
          required: false
          default: 0
          type: number
      tags:
        - Activity
      responses:
        '200':
          description: Activity of this user.
          schema:
            $ref: '#/definitions/PagedWeekActivityOverviews'
  '/users/{userID}/activity/weeks/{week}/details/{goalID}':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: week
        in: path
        description: The date of the week in ISO 8601 format (YYYY-'W'w)
        required: true
        type: string
      - name: goalID
        in: path
        description: The ID of the goal for which the activity was recorded
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    get:
      summary: Get week activity detail
      description: Get day network and app activity for a specific goal on a specific week
      tags:
        - Activity
      responses:
        '200':
          description: Activity of this user for the specific goal on the specific week.
          schema:
            $ref: '#/definitions/WeekActivity'
  '/users/{userID}/messages/':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    get:
      summary: Get messages
      description: Fetches all messages of the user with the given ID
      parameters:
        - name: size
          in: query
          description: The number of elements to be fetched
          required: false
          default: 10
          type: number
        - name: page
          in: query
          description: The page to be fetched
          required: false
          default: 0
          type: number
      tags:
        - Message
      responses:
        '200':
          description: Messages of this user.
          schema:
            $ref: '#/definitions/PagedMessages'
  '/users/{userID}/messages/{id}':
    parameters:
      - name: userID
        in: path
        description: The ID of the user
        required: true
        type: string
      - name: id
        in: path
        description: The ID of the message
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    get:
      summary: Get a message
      description: Fetches all messages of the user with the given ID
      tags:
        - Message
      responses:
        '200':
          description: Messages of this user.
          schema:
            $ref: '#/definitions/Message'
    delete:
      summary: Delete a message
      description: Deletes the message with the given ID
      tags:
        - Message
      responses:
        '200':
          description: Messages of this user.
  '/users/{userID}/messages/{id}/{messageAction}':
    post:
      summary: Act on a message
      description: Perform the Process action on the message with the given ID
      parameters:
        - name: userID
          in: path
          description: The ID of the user
          required: true
          type: string
        - name: id
          in: path
          description: The ID of the message
          required: true
          type: string
        - name: messageAction
          in: path
          description: The action to be performed on the message
          required: true
          type: string
        - name: Yona-Password
          in: header
          description: The device password
          required: true
          type: string
        - in: body
          name: body
          description: New user
          required: true
          schema:
            $ref: '#/definitions/MessageAction'
      tags:
        - Message
      responses:
        '201':
          description: The action response
          schema:
            $ref: '#/definitions/MessageAction'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/newDeviceRequests/{mobileNumber}':
    parameters:
      - name: mobileNumber
        in: path
        description: The mobile number of the user
        required: true
        type: string
      - name: Yona-Password
        in: header
        description: The device password
        required: true
        type: string
    put:
      summary: Request to add a new device
      description: This stores an encrypted copy of the users device key on the server, for a limited period of time.
      parameters:
        - name: Yona-Password
          in: header
          description: The device password
          required: true
          type: string
        - in: body
          name: body
          description: Message with user secret. The device password will be encrypted with this secret and stored for a limited period of time.
          required: true
          schema:
            type: object
            required:
              - userSecret
            properties:
              userSecret:
                type: string
      tags:
        - New device requests
      responses:
        '200':
          description: The new device request is available
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get new device request
      description: If the user secret is given, the returned resource contains the device password. The app can check the presence of a new device request by omitting the user secret. In that case, a blank new device request is returned.
      parameters:
        - name: userSecret
          in: header
          description: The password used to encrypt the device key
          required: false
          type: string
      tags:
        - New device requests
      responses:
        '200':
          description: The new device request
          schema:
            $ref: '#/definitions/NewDeviceRequest'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete new device request
      description: Deletes the new device request
      parameters:
        - name: Yona-Password
          in: header
          description: The device password
          required: true
          type: string
      tags:
        - New device requests
      responses:
        '200':
          description: The new device request is deleted.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/activityCategories/':
    get:
      summary: Get all activity categories
      description: Get the set of defined activity categories
      tags:
        - Activity categories
      responses:
        '200':
          description: The activity categories.
          schema:
            type: array
            items: 
              $ref: '#/definitions/ActivityCategory'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/activityCategories/{id}':
    get:
      summary: Get an activity category
      description: Fetches the activity category identified by the given ID
      parameters:
        - name: id
          in: path
          description: The ID of the activity category
          required: true
          type: string
      tags:
        - Activity categories
      responses:
        '200':
          description: The requested activity category.
          schema:
            $ref: '#/definitions/ActivityCategory'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/admin/requestUserOverwrite/':
    post:
      summary: Request user overwrite
      description: Request to overwrite the user account after a device loss
      parameters:
        - in: body
          name: body
          description: User overwrite request
          required: true
          schema:
            $ref: '#/definitions/UserOverwriteRequest'
      tags:
        - Admin
      responses:
        '200':
          description: The request was successfully created. The confirmation will be texted to the mobile number.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Curies:
    type: object
    properties:
      curies:
        type: array
        description: A set of curies (Compact URIs). For Yona, there is just one curie.
        items:
          type: object
          properties:
            name:
              type: string
              description: The curie name. The prefix of a curied link will be used to find the curie by name
              example: yona
            href:
              type: string
              description: The URL corresponding to this curie.
              example: http://dev.yona.nu/rels/{rel}
            templated:
              type: string
              format: boolean
              description: Whether this curie is templated (always true for Yona).
              example: true
          required:
            - name
            - href
            - templated
  SelfLink:
    type: object
    properties:
      self:
        type: object
        required:
          - href
        properties:
          href:
            type: string
            description: Identifies this same resource
    required:
      - self
  EditLink:
    type: object
    properties:
      edit:
        type: object
        required:
          - href
        properties:
          href:
            type: string
            description: Through this link, this resource can be edited or deleted. Note that this link is not always present. Certain resources can never be edited. Some others can only be edited or deleted in a specific state. Unprocessed messages for example cannot be deleted.
  RelatedLink:
    type: object
    properties:
      related:
        type: object
        required:
          - href
        properties:
          href:
            type: string
            description: Refers to a related resource
  UserLink:
    type: object
    properties:
      "yona:user":
        type: object
        required:
          - href
        properties:
          href:
            type: string
            description: The related user
  AcceptLink:
    type: object
    properties:
      "yona:accept":
        type: object
        required:
          - href
        properties:
          href:
            type: string
            description: Post a MessageAction with a message on this link to accept this request
  RejectLink:
    type: object
    properties:
      "yona:reject":
        type: object
        required:
          - href
        properties:
          href:
            type: string
            description: Post a MessageAction with a message on this link to reject this request
  ProcessLink:
    type: object
    properties:
      "yona:process":
        type: object
        required:
          - href
        properties:
          href:
            type: string
            description: Post an empty MessageAction on this link to process this response
  BaseUser:
    type: object
    properties:
      firstName:
        type: string
        description: First name.
        example: Richard
      lastName:
        type: string
        description: Last name.
        example: Quin
      mobileNumber:
        type: string
        description: 'Mobile number, unique among all users.'
        example: "+31612345678"
    required:
    - firstName
    - lastName
    - mobileNumber
  PrivateUserDataNoVPN:
    type: object
    properties:
      nickname:
        type: string
        description: Nickname known among buddies. Private data.
        example: RQ
    required:
    - nickname
  PrivateUserData:
    allOf:
      - $ref: '#/definitions/PrivateUserDataNoVPN'
    properties:
      vpnProfile:
        $ref: '#/definitions/VPNProfile'
    required:
    - vpnProfile
  PostPutUser:
    allOf:
      - $ref: '#/definitions/BaseUser'
      - $ref: '#/definitions/PrivateUserDataNoVPN'
  UserWithPrivateData:
    allOf:
      - $ref: '#/definitions/BaseUser'
      - $ref: '#/definitions/PrivateUserData'
    properties:
      _embedded:
        type: object
        properties:
          "yona:goals":
            type: object
            description: The goals of this user. Private data.
            properties:
              _embedded:
                type: object
                properties:
                  "yona:goals":
                    type: array
                    items:
                      $ref: "#/definitions/Goal"
              links:
                allOf:
                  - $ref: '#/definitions/SelfLink'
                  - $ref: '#/definitions/EditLink'
          "yona:buddies":
            type: object
            description: The buddies of this user. Private data.
            properties:
              _embedded:
                type: object
                properties:
                  "yona:buddies":
                    type: array
                    items:
                      $ref: "#/definitions/Buddy"
              links:
                allOf:
                  - $ref: '#/definitions/SelfLink'
                  - $ref: '#/definitions/EditLink'
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/EditLink'
        properties:
          "yona:confirmMobileNumber":
            type: object
            required:
              - href
            properties:
              href:
                type: string
                description: If this link is present, the mobile number of the user must be confirmed by posting the confirmation to this URL.
          "yona:resendMobileNumberConfirmationCode":
            type: object
            required:
              - href
            properties:
              href:
                type: string
                description: This link allows requesting a resend of the mobile number confirmation code.
          "yona:messages":
            type: object
            required:
              - href
            properties:
              href:
                type: string
                description: Refers to the messages for this user
          "yona:weeklyActivityReports":
            type: object
            required:
              - href
            properties:
              href:
                type: string
                description: Refers to the weekly activity reports
          "yona:dailyActivityReports":
            type: object
            required:
              - href
            properties:
              href:
                type: string
                description: Refers to the daily activity reports
          "yona:newDeviceRequest":
            type: object
            required:
              - href
            properties:
              href:
                type: string
                description: Create, get or delete a "new device request" through this link
          "yona:appActivity":
            type: object
            required:
              - href
            properties:
              href:
                type: string
                description: Post new app activity data to this link
    required:
      - _embedded
      - _links
  UserWithOnlyPublicData:
    allOf:
      - $ref: '#/definitions/BaseUser'
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/SelfLink'
    required:
      - _links
  PostPutGoal:
    type: object
    discriminator: "@type"
    properties:
      "@type":
        type: string
        enum:
        - BudgetGoal
        - TimeZoneGoal
        description: The type of goal
      activityCategoryName:
        type: string
        description: The actity category of this goal
        example: Gambling
    required:
    - "@type"
    - activityCategoryName
  BudgetGoal:
    allOf:
      - $ref: '#/definitions/PostPutGoal'
    properties:
      maxDurationMinutes:
        type: integer
        description: The budget (duration) for this goal in minutes
        example: 0
    required:
      - maxDurationMinutes
  TimeZoneGoal:
    allOf:
      - $ref: '#/definitions/PostPutGoal'
    properties:
      zones:
        type: array
        items:
          type: string
          example: "8:00-17:00"
        description: The zones for this goal
    required:
      - zones
  Goal:
    allOf:
      - $ref: '#/definitions/PostPutGoal'
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/EditLink'
    required:
      - _links
  VPNProfile:
    type: object
    description: VPN profile. Private data.
    properties:
      vpnLoginID:
        type: string
        description: The user ID to log in to the VPN
        example: c4b139c0-53ea-4a19-8b60-a6d526bb2277
      vpnPassword:
        type: string
        description: The password to log in to the VPN
        example: UA1ksZCptapsDRdg1Qrn2bDvKdfl8sDd
      openVPNProfile:
        type: string
        description: The OpenVPN profile to be installed on the device. Newlines are specified as \n.
        example: "client \ndev tun \nresolv-retry infinite \nnobind \npersist-key \npersist-tun \n<ca> \n-----BEGIN CERTIFICATE-----..."
    required:
      - vpnLoginID
      - vpnPassword
      - openVPNProfile
  BuddyStatus:
    type: string
    description: The status of this buddy or buddy connect request
    enum:
    - NOT_REQUESTED
    - REQUESTED
    - ACCEPTED
    - REJECTED
  PostPutBuddy:
    type: object
    properties:
      nickname:
        type: string
        description: Nickname of this buddy
        example: RQ
      sendingStatus:
        $ref: '#/definitions/BuddyStatus'
        example: REQUESTED
      receivingStatus:
        $ref: '#/definitions/BuddyStatus'
        example: REQUESTED
      _embedded:
        type: object
        properties:
          "yona:user":
              $ref: "#/definitions/UserWithOnlyPublicData"
    required:
      - nickname
      - sendingStatus
      - receivingStatus
  Buddy:
    allOf:
      - $ref: '#/definitions/PostPutBuddy'
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/EditLink'
    required:
      - _links
  NewDeviceRequest:
    type: object
    properties:
      userPassword:
        type: string
        description: The device key. If the user secret was not provided in the request, this property will be blank.
        example: Only I know this
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/EditLink'
    required:
      - userPassword
      - _links
  ActivityCategory:
    type: object
    properties:
      name:
        type: string
        description: The name of this activity category
        example: Gambling
      isMandatory:
        type: boolean
        description: True when this activity category is mandatory for all users. The server will add a goal for such activity categories upon sign up of a user
        example: true
      applications:
        type: array
        items:
          type: string
        description: The set of apps linked to this activity category
        example:
          - Roulette
          - Blackjack
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
    required:
      - name
      - isMandatory
      - applications
      - _links
  Message:
    type: object
    discriminator: "@type"
    properties:
      "@type":
        type: string
        enum:
        - BuddyConnectRequestMessage
        - BuddyConnectResponseMessage
        - BuddyDisconnectMessage
        - GoalConflictMessage
        - DisclosureRequestMessage
        - DisclosureResponseMessage
      creationTime:
        type: string
        format: dateTime
        description: The creation time of this message
        example: 2016-02-23T21:28:58.556+0000
    required:
      - "@type"
      - creationTime
  BuddyMessage:
    allOf:
      - $ref: '#/definitions/Message'
    properties:
      nickname:
        type: string
        description: The nickname of the buddy
        example: RQ
      message:
        type: string
        description: The message from the buddy
        example: Hi there, how are you doing?
    required:
      - nickname
      - message
  BuddyMessageWithEmbeddedUser:
    allOf:
      - $ref: '#/definitions/BuddyMessage'
    properties:
      _embedded:
        type: object
        properties:
          "yona:user":
              $ref: "#/definitions/UserWithOnlyPublicData"
    required:
      - _embedded
  BuddyConnectRequestMessage:
    allOf:
      - $ref: '#/definitions/BuddyMessageWithEmbeddedUser'
    properties:
      status:
        $ref: '#/definitions/BuddyStatus'
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/EditLink'
          - $ref: '#/definitions/AcceptLink'
          - $ref: '#/definitions/RejectLink'
    required:
      - status
      - _links
  BuddyConnectResponseMessage:
    allOf:
      - $ref: '#/definitions/BuddyMessage'
    properties:
      status:
        $ref: '#/definitions/BuddyStatus'
        example: ACCEPTED
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/UserLink'
          - $ref: '#/definitions/EditLink'
          - $ref: '#/definitions/ProcessLink'
    required:
      - status
      - _links
  BuddyDisconnectMessage:
    allOf:
      - $ref: '#/definitions/BuddyMessageWithEmbeddedUser'
    properties:
      dropBuddyReason:
        type: string
        enum:
          - USER_ACCOUNT_DELETED
          - USER_REMOVED_BUDDY
        description: The reason why this buddy is disconnected
        example: USER_REMOVED_BUDDY
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/EditLink'
          - $ref: '#/definitions/ProcessLink'
    required:
      - dropBuddyReason
      - _links
  GoalConflictStatus:
    type: string
    description: The status of this goal conflict message or disclosure request
    enum:
    - ANNOUNCED
    - DISCLOSURE_REQUESTED
    - DISCLOSURE_ACCEPTED
    - DISCLOSURE_REJECTED
  GoalConflictMessage:
    allOf:
      - $ref: '#/definitions/Message'
    properties:
      nickname:
        type: string
        description: The nickname of the buddy
        example: RQ
      status:
        $ref: '#/definitions/GoalConflictStatus'
        example: ANNOUNCED
      activityCategoryName:
        # TODO: Replace this with a link to the related day activity
        type: string
        description: The name of the activity category
        example: Gambling
      url:
        type: string
        description: The URL on which the goal conflict was detected
        example: http://www.poker.com
      activityStartTime:
        type: string
        format: dateTime
        description: The start time of this activity
        example: 2016-02-31T21:03:52.290+0000
      activityEndTime:
        type: string
        format: dateTime
        description: The end time of this activity
        example: 2016-02-31T21:03:57.721+0000
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/EditLink'
        properties:
          "yona:requestDisclosure":
            properties:
              href:
                type: string
                description: Post a MessageAction with a message property to accept this disclosure request
    required:
      - nickname
      - status
      - activityCategoryName
      - url
      - activityStartTime
      - activityEndTime
      - _links
  DisclosureRequestMessage:
    allOf:
      - $ref: '#/definitions/BuddyMessage'
    properties:
      status:
        $ref: '#/definitions/GoalConflictStatus'
        example: DISCLOSURE_REQUESTED
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/UserLink'
          - $ref: '#/definitions/EditLink'
          - $ref: '#/definitions/RelatedLink'
          - $ref: '#/definitions/AcceptLink'
          - $ref: '#/definitions/RejectLink'
    required:
      - status
      - _links
  DisclosureResponseMessage:
    allOf:
      - $ref: '#/definitions/BuddyMessage'
    properties:
      status:
        $ref: '#/definitions/GoalConflictStatus'
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/UserLink'
          - $ref: '#/definitions/EditLink'
          - $ref: '#/definitions/RelatedLink'
    required:
      - status
      - _links
  PagedWeekActivityOverviews:
    type: object
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
        properties:
          next:
            properties:
              href:
                type: string
                description: Link to next page, if available
            required:
              - href
          prev:
            properties:
              href:
                type: string
                description: Link to previous page, if available
            required:
              - href
        required:
          - next
          - self
          - prev
      _embedded:
        properties:
          "yona:weekActivityOverviews":
            type: array
            items:
              $ref: '#/definitions/WeekActivityOverview'
      page:
        description: Information about the current page
        properties:
          size:
            type: string
            description: The number of elements on the current page
          totalElements:
            type: string
            description: The total number of elements
            example: 300
          totalPages:
            type: string
            description: The total number of pages
            example: 15
          number:
            type: string
            description: The current page number.
            example: 1
        required:
          - size
          - totalElements
          - totalPages
          - number
    required:
      - _links
      - _embedded
      - page
  WeekActivityOverview:
    type: object
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
      _embedded:
        properties:
          "yona:weekActivities":
            type: array
            items:
              $ref: '#/definitions/WeekActivity'
  WeekActivity:
    allOf:
      - $ref: '#/definitions/IntervalActivity'
    properties:
      date:
        type: string
        example: 2016-W2
        description: The week date in ISO 8601 format (YYYY-'W'w)
      _embedded:
        properties:
          "yona:dayActivities":
            type: array
            items:
              $ref: '#/definitions/DayActivity'
  PagedDayActivityOverviews:
    type: object
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
        properties:
          next:
            properties:
              href:
                type: string
                description: Link to next page, if available
            required:
              - href
          prev:
            properties:
              href:
                type: string
                description: Link to previous page, if available
            required:
              - href
        required:
          - next
          - self
          - prev
      _embedded:
        properties:
          "yona:dayActivityOverviews":
            type: array
            items:
              $ref: '#/definitions/DayActivityOverview'
      page:
        description: Information about the current page
        properties:
          size:
            type: string
            description: The number of elements on the current page
          totalElements:
            type: string
            description: The total number of elements
            example: 300
          totalPages:
            type: string
            description: The total number of pages
            example: 15
          number:
            type: string
            description: The current page number.
            example: 1
        required:
          - size
          - totalElements
          - totalPages
          - number
    required:
      - _links
      - _embedded
      - page
  DayActivityOverview:
    type: object
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
      _embedded:
        properties:
          "yona:dayActivities":
            type: array
            items:
              $ref: '#/definitions/DayActivity'
  DayActivity:
    allOf:
      - $ref: '#/definitions/IntervalActivity'
    properties:
      date:
        type: string
        example: 2016-03-16
        description: The day date in ISO 8601 format (yyyy-MM-dd)
      goalAccomplished:
        type: boolean
        description: If the goal for this day was accomplished. If the day is not yet over, if the goal for this day was accomplished so far
      totalMinutesBeyondGoal:
        type: integer
        description: The total minutes of time the user was active in the activity category outside the allowed time for the goal.
      # TODO: embedded messages
  IntervalActivity:
    type: object
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
        properties:
          "yona:goal":
            type: object
            properties:
              href:
                type: string
            required:
              - href
            description: Link to the goal for which activity was recorded
      spread:
        type: array
        items:
          type: integer
        description: Aggregates all activity on every quarter hour of the day (of which there are 96). This information is included in day detail, week detail, and also, for time zone goals, in day overview.
      totalActivityDurationMinutes:
        type: integer
        description: Total minutes spent on the activity category during this interval. This information is not included in week overview.
      timeZoneId:
        type: string
        description: The time zone identifier that the user had configured for this day
        example: Europe/Amsterdam
    required:
      - timeZoneId
  PagedMessages:
    type: object
    properties:
      _links:
        allOf:
          - $ref: '#/definitions/Curies'
          - $ref: '#/definitions/SelfLink'
        properties:
          next:
            properties:
              href:
                type: string
                description: Link to next page, if available
            required:
              - href
          prev:
            properties:
              href:
                type: string
                description: Link to previous page, if available
            required:
              - href
        required:
          - next
          - self
          - prev
      _embedded:
        properties:
          "yona:messages":
            type: array
            items:
              $ref: '#/definitions/Message'
      page:
        description: Information about the current page
        properties:
          size:
            type: string
            description: The number of elements on the current page
          totalElements:
            type: string
            description: The total number of elements
            example: 300
          totalPages:
            type: string
            description: The total number of pages
            example: 15
          number:
            type: string
            description: The current page number.
            example: 1
        required:
          - size
          - totalElements
          - totalPages
          - number
    required:
      - _links
      - _embedded
      - page
  MessageAction:
    type: object
    properties:
      "properties":
        type: object
        description: A set of properties to be passed to the message action
        additionalProperties:
          type: string
    required:
      - "properties"
  UserOverwriteRequest:
    type: object
    properties:
      mobileNumber:
        type: string
        description: The mobile number to be overwritten
        example: "+31612345678"
    required:
      - mobileNumber
  Error:
    type: object
    properties:
      code:
        type: string
        description: The error code
        example: error.user.mobile.number.invalid
      message:
        type: string
        description: A localized error message
        example: The mobile number ''+31 6 12345678'' is invalid. It must start with a + sign, with no spaces between the digits
  ConfirmationError:
    allOf:
      - $ref: '#/definitions/Error'
    properties:
      remainingAttempts:
        type: integer
        description: The number of remaining attempts. Only available upon a failed confirmation attempt
        example: 4
